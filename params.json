{"name":"ThinkFirst","tagline":"Comparative study Java tools for executable specifications","body":"# Bridging the communication gap: can tools help?\r\n## Comparing Java tools for executable specifications\r\nBuilding great software requires a thorough understanding of the real needs of our customer. Techniques such as ATDD, BDD and Specification by Example help us understand the requirements by describing how the software has to behave in a language understood by all stakeholders. These specifications are made executable, creating automated acceptance tests. This suite of executable specifications forms the living documentation of the software system as it is guaranteed to be up to date.\r\n\r\nThere are several tools available that can help you with this. Well known examples are: Cucumber, JBehave, Fitnesse, ScalaTest, Concordion, Robot Framework, â€¦ . Finding out which tool is the best fit for your use case is essential to success.\r\n\r\nUnfortunately this information is not readily available. This project aims to change this. We compared several of the aforementioned tools according to certain criteria based on real case studies and listed their strengths and weaknesses. This helps you to choose the best tool for your project. \r\n\r\nThis site will give an overview of the tools available in this area.\r\n\r\n## Tools\r\n* Cucumber\r\n* JBehave\r\n* JNario\r\n* Fitnesse\r\n* ScalaTest\r\n* Concordion\r\n* Robot Framework\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}